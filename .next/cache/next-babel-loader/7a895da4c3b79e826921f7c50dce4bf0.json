{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/pabsromerojr/Documents/Projects/tourvo-apollo/pages/product/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, memo, useState } from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport Nav from '../../components/nav';\nimport PRODUCT_QUERY from '../../graphql/product.query';\n\nconst Products = ({\n  router,\n  slug\n}) => {\n  // const { slug } = router.query\n  console.log('slug', slug);\n  if (!slug) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"loading url\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(PRODUCT_QUERY, {\n    variables: {\n      slug\n    }\n  });\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Error: \", _JSON$stringify(error));\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Home\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Slug: \", slug), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Name: \", data.productBy.name));\n};\n\nProducts.getInitialProps = async ({\n  query\n}) => {\n  return {\n    slug: query.slug\n  };\n};\n\nexport default withRouter(Products);","map":{"version":3,"sources":["/Users/pabsromerojr/Documents/Projects/tourvo-apollo/pages/product/[slug].js"],"names":["React","useEffect","memo","useState","Head","withRouter","useQuery","Nav","PRODUCT_QUERY","Products","router","slug","console","log","data","loading","error","variables","productBy","name","getInitialProps","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AACrC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AAEA,MAAI,CAACA,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAEX,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BV,QAAQ,CAACE,aAAD,EAAgB;AACvDS,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAD4C,GAAhB,CAAzC;;AAIA,MAAII,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,gBAAeA,KAAf,CAAX,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUL,IAAV,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUG,IAAI,CAACI,SAAL,CAAeC,IAAzB,CAPF,CADF;AAWD,CA7BD;;AA+BAV,QAAQ,CAACW,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC9C,SAAO;AACLV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeN,UAAU,CAACI,QAAD,CAAzB","sourcesContent":["import React, { useEffect, memo, useState } from 'react'\nimport Head from 'next/head'\nimport { withRouter } from 'next/router'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Nav from '../../components/nav'\nimport PRODUCT_QUERY from '../../graphql/product.query'\n\nconst Products = ({ router, slug }) => {\n  // const { slug } = router.query\n  console.log('slug', slug)\n\n  if (!slug) return <p>loading url</p>\n\n  const { data, loading, error } = useQuery(PRODUCT_QUERY, {\n    variables: { slug }\n  })\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>Home</title>\n        <link rel='icon' href='/favicon.ico' />\n      </Head>\n      <Nav />\n      <p>Slug: {slug}</p>\n      <p>Name: {data.productBy.name}</p>\n    </div>\n  )\n}\n\nProducts.getInitialProps = async ({ query }) => {\n  return {\n    slug: query.slug\n  }\n}\n\nexport default withRouter(Products)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/pabsromerojr/Documents/Projects/tourvo-apollo/pages/product/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, memo } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport PRODUCTS_QUERY from '../../graphql/products.query';\nimport Nav from '../../components/nav';\n\nconst Products = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(PRODUCTS_QUERY);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {// console.log('data', data)\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Error: \", _JSON$stringify(error));\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Home\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Product: \", id));\n};\n\nexport default memo(Products);","map":{"version":3,"sources":["/Users/pabsromerojr/Documents/Projects/tourvo-apollo/pages/product/[id].js"],"names":["React","useEffect","memo","Head","useRouter","useQuery","PRODUCTS_QUERY","Nav","Products","data","loading","error","router","id","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACC,cAAD,CAAzC;AACA,QAAMM,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEAb,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIS,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,gBAAeA,KAAf,CAAX,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaE,EAAb,CANF,CADF;AAUD,CA3BD;;AA6BA,eAAeX,IAAI,CAACM,QAAD,CAAnB","sourcesContent":["import React, { useEffect, memo } from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport PRODUCTS_QUERY from '../../graphql/products.query'\nimport Nav from '../../components/nav'\n\nconst Products = () => {\n  const { data, loading, error } = useQuery(PRODUCTS_QUERY)\n  const router = useRouter()\n  const { id } = router.query\n\n  useEffect(() => {\n    // console.log('data', data)\n  }, [])\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>Home</title>\n        <link rel='icon' href='/favicon.ico' />\n      </Head>\n      <Nav />\n      <p>Product: {id}</p>\n    </div>\n  )\n}\n\nexport default memo(Products)\n"]},"metadata":{},"sourceType":"module"}
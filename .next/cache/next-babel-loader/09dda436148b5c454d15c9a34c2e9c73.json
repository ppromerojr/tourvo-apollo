{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/pabsromerojr/Documents/Projects/tourvo-apollo/pages/product/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, memo } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport Nav from '../../components/nav';\nimport PRODUCT_QUERY from '../../graphql/product.query';\n\nvar Products = function Products() {\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var _useQuery = useQuery(PRODUCT_QUERY, {\n    variables: {\n      slug: slug\n    }\n  }),\n      product = _useQuery.data.productBy,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  useEffect(function () {\n    console.log('data', product);\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Error: \", _JSON$stringify(error));\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Home\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Slug: \", slug), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Name: \", product.name));\n};\n\nexport default memo(Products);","map":{"version":3,"sources":["/Users/pabsromerojr/Documents/Projects/tourvo-apollo/pages/product/[slug].js"],"names":["React","useEffect","memo","Head","useRouter","useQuery","Nav","PRODUCT_QUERY","Products","router","slug","query","variables","product","data","productBy","loading","error","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AADqB,MAEbM,IAFa,GAEJD,MAAM,CAACE,KAFH,CAEbD,IAFa;;AAAA,kBAQjBL,QAAQ,CAACE,aAAD,EAAgB;AAC1BK,IAAAA,SAAS,EAAE;AAAEF,MAAAA,IAAI,EAAJA;AAAF;AADe,GAAhB,CARS;AAAA,MAKAG,OALA,aAKnBC,IALmB,CAKXC,SALW;AAAA,MAMnBC,OANmB,aAMnBA,OANmB;AAAA,MAOnBC,KAPmB,aAOnBA,KAPmB;;AAYrBhB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,OAApB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIG,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,gBAAeA,KAAf,CAAX,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUP,IAAV,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUG,OAAO,CAACO,IAAlB,CAPF,CADF;AAWD,CAnCD;;AAqCA,eAAelB,IAAI,CAACM,QAAD,CAAnB","sourcesContent":["import React, { useEffect, memo } from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Nav from '../../components/nav'\nimport PRODUCT_QUERY from '../../graphql/product.query'\n\nconst Products = () => {\n  const router = useRouter()\n  const { slug } = router.query\n\n  const {\n    data: { productBy: product },\n    loading,\n    error\n  } = useQuery(PRODUCT_QUERY, {\n    variables: { slug }\n  })\n\n  useEffect(() => {\n    console.log('data', product)\n  }, [])\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>Home</title>\n        <link rel='icon' href='/favicon.ico' />\n      </Head>\n      <Nav />\n      <p>Slug: {slug}</p>\n      <p>Name: {product.name}</p>\n    </div>\n  )\n}\n\nexport default memo(Products)\n"]},"metadata":{},"sourceType":"module"}
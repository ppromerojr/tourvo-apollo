{"version":3,"file":"static/webpack/static/development/pages/product/[slug].js.8d1ca783c2ec08c9edc9.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./pages/product/[slug].js"],"sourcesContent":["import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useEffect, memo, useState } from 'react'\nimport Head from 'next/head'\nimport { withRouter } from 'next/router'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Nav from '../../components/nav'\nimport PRODUCT_QUERY from '../../graphql/product.query'\n\nconst Products = ({ router }) => {\n  const { slug } = router.query\n\n  if (!slug) return <p>loading url</p>\n\n  console.log(router)\n\n  const { data, loading, error } = useQuery(PRODUCT_QUERY, {\n    variables: { slug }\n  })\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>Home</title>\n        <link rel='icon' href='/favicon.ico' />\n      </Head>\n      <Nav />\n      <p>Slug: {slug}</p>\n      <p>Name: {data.productBy.name}</p>\n    </div>\n  )\n}\n\nProducts.getInitialProps = async () => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n\n  console.log(`Show data fetched. Count: ${data.length}`)\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default withRouter(Products)\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpsourceRoot":""}